plugins {
    id 'java'
    id 'idea'
    id("com.palantir.git-version") version("0.12.3")
    id("maven-publish")
}

def projectJavaVersion = JavaLanguageVersion.of(8)

java {
    toolchain {
        languageVersion.set(projectJavaVersion)
    }
}

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

// Fix Jenkins' Git: chmod a file should not be detected as a change and append a '.dirty' to the version
'git config core.fileMode false'.execute()

group = projectGroup
archivesBaseName = projectId

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile group: 'org.ow2.asm', name: 'asm-debug-all', version: '5.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'


//    compile 'org.ow2.asm:asm-debug-all:6.0_BETA'

    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.0.1'
    )

    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.0.1',
            'org.junit.vintage:junit-vintage-engine:4.12.1',
            'org.junit.platform:junit-platform-launcher:1.0.1',
            'org.junit.platform:junit-platform-runner:1.0.1'
    )
    //compile files("${System.properties['java.home']}/../lib/tools.jar")
    //compile files("libs/tools.jar")
}

jar {
    // Pulls version from git tag
    getArchiveVersion().set(gitVersion())

    from sourceSets.main.output
    from (file("$projectDir/LICENSE"))
}

task sourcesJar(type: Jar) {
    // Pulls version from git tag
    getArchiveVersion().set(gitVersion())

    from sourceSets.main.output
    from sourceSets.main.allJava
    getArchiveClassifier().set('sources')
}

artifacts {
    archives sourcesJar
}

// publishing
publishing {
    publications {
        maven(MavenPublication) {
            artifact source: jar
            artifact source: sourcesJar, classifier: "src"

            groupId = System.getenv("ARTIFACT_GROUP_ID") ?: "com.github.GTNewHorizons"
            artifactId = System.getenv("ARTIFACT_ID") ?: project.name
            version = System.getenv("ARTIFACT_VERSION") ?: project.version
        }
    }

    repositories {
        maven {
            url = "http://jenkins.usrv.eu:8081/nexus/content/repositories/releases"
            credentials {
              username = System.getenv("MAVEN_USER") ?: "NONE"
              password = System.getenv("MAVEN_PASSWORD") ?: "NONE"
            }
        }
    }
}
